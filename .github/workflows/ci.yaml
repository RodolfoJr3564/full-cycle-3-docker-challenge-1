name: CI

on:
  push:
    branches:
      - develop
    paths:
      - 'ci/**'
      - 'ddd/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test ${{ matrix.challengePath }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        challengePath: [ci, ddd]
        sonarCheck: [ci]
    defaults:
      run:
        shell: bash
        working-directory: ./${{ matrix.challengePath }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Test
        run: npm run test
      - name: Coverage
        if: ${{ contains(matrix.sonarCheck, matrix.challengePath) }}
        run: npm run test:cov
      - name: Upload coverage
        if: ${{ contains(matrix.sonarCheck, matrix.challengePath) }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./${{ matrix.challengePath }}/coverage

  sonarcloud:
    name: SonarCloud
    if: ${{ needs.test.outputs.sonarCheck == 'ci' }}
    needs: test
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ./ci/coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./ci
